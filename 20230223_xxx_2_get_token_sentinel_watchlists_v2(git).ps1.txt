
#----------------------------------------------------------------------------------------------------
$url = "https://login.microsoftonline.com/organizations/oauth2/v2.0/token"
$Headers = @{"Host"="login.microsoftonline.com" ; "ContentType"="application/x-www-form-urlencoded"}
$Body=@{
grant_type="urn:ietf:params:oauth:grant-type:device_code"
client_id="04b07795-8ddb-461a-bbee-02f9e1bf7b46"
client_info="1"
code=$devicecode
}

$response=Invoke-WebRequest -UseBasicParsing -Uri $url -Method "POST" -Headers $Headers  -Body $Body
$jsonObj =ConvertFrom-Json $([String]::new($response.Content))
$accesstoken=$jsonObj.access_token
$refreshtoken=$jsonObj.refresh_token

#----------------------------------------------------------------------------------------------------
$url2 = "https://login.microsoftonline.com/${tenantid}/oauth2/v2.0/token"
$Headers2 = @{"Host"="login.microsoftonline.com"}
$Body2=@{
grant_type="refresh_token"
client_id="04b07795-8ddb-461a-bbee-02f9e1bf7b46"
client_info="1"
refresh_token=$refreshtoken
"scope"="https://management.core.windows.net//.default"+" offline_access"+" openid"+" profile"
}

$response2=Invoke-WebRequest -UseBasicParsing -Uri $url2 -Method "POST" -Headers $Headers2  -Body $Body2
$jsonObj2 =ConvertFrom-Json $([String]::new($response2.Content))
$accesstoken2=$jsonObj2.access_token
$refreshtoken2=$jsonObj2.refresh_token

$CurrentDir = Split-Path $MyInvocation.MyCommand.Path

#----------------------------------------------------------------------------------------------------
#$url31="https://management.azure.com/subscriptions/${subscriptionid}/resourceGroups/${resourcegroupname}/providers/Microsoft.OperationalInsights/workspaces/${workspacesname}/providers/Microsoft.SecurityInsights/alertRules?api-version=2022-11-01-preview"
$url31="https://management.azure.com/subscriptions/e626783a-a67b-4985-bb15-57d0b9aa0ba4/resourceGroups/${resourcegroupname}/providers/Microsoft.OperationalInsights/workspaces/${workspacesname}/providers/Microsoft.SecurityInsights/watchlists?api-version=2022-01-01-preview"
$Headers3 = @{"Authorization"="Bearer "+$accesstoken2 ; "Content-Type"="application/json"}

$response31=Invoke-WebRequest -UseBasicParsing -Uri $url31 -Method "GET" -Headers $Headers3  # -Body $Body3
$jsonObj31 =ConvertFrom-Json $([String]::new($response31.Content))

$max31=$jsonObj31.value.Count
Write-Host "---- watchlist  ---------------------------------"
for ($i31=0; $i31 -lt $max31; $i31++){
$f31=$CurrentDir+ "\"+ $jsonObj31.value[$i31].name + "_properties_"+(Get-date).ToString("yyyyMMdd_HHmm") +".txt"
Write-Host $jsonObj31.value[$i31].name,";",$jsonObj31.value[$i31].id,";",$jsonObj31.value[$i31].name,";",$jsonObj31.value[$i31].properties.displayName
$jsonObj31.value[$i31].properties |  ConvertTo-Csv -NoTypeInformation | Set-Content $f31

Write-Host "-------------------------------------"
}

for ($i31=0; $i31 -lt $max31; $i31++){
Write-Host $jsonObj31.value[$i31].name

$url32="https://management.azure.com"+$jsonObj31.value[$i31].id+ "/watchlistitems?api-version=2022-01-01-preview&%24orderby=updated%20desc&%24top=100"
$response32=Invoke-WebRequest -UseBasicParsing -Uri $url32 -Method "GET" -Headers $Headers3  # -Body $Body3
$jsonObj32 =ConvertFrom-Json $([String]::new($response32.Content))

$max32=$jsonObj32.value.Count
for ($i32=0; $i32 -lt $max32; $i32++){
Write-Host $jsonObj32.value[$i32].name,";",$jsonObj32.value[$i32].properties.itemsKeyValue

#$f32="c:\tmp\"+ $jsonObj31.value[$i31].name + " _lists_"+(Get-date).ToString("yyyyMMdd_HHmm") +".txt"
$f32=$CurrentDir+ "\"+ $jsonObj31.value[$i31].name + " _lists_"+(Get-date).ToString("yyyyMMdd_HHmm") +".txt"

#$jsonObj32.value[$i32].properties.itemsKeyValue | Select-Object -Property * |  ConvertTo-Csv -NoTypeInformation | Select-Object -Skip 1 | set-Content  $f32
#$jsonObj32.value[$i32].properties.itemsKeyValue | Select-Object -Property * |  ConvertTo-Csv -NoTypeInformation | set-Content  $f32

#$jsonObj32.value[$i32].properties.itemsKeyValue | Select-Object -Property * |  ConvertTo-Csv -NoTypeInformation | Add-Content  $f32

if($i32 -eq 0){
$jsonObj32.value[$i32].properties.itemsKeyValue | Select-Object -Property * |  ConvertTo-Csv -NoTypeInformation | set-Content  $f32
}else{
$jsonObj32.value[$i32].properties.itemsKeyValue | Select-Object -Property * |  ConvertTo-Csv -NoTypeInformation | Select-Object -Skip 1 |Add-Content  $f32
}
#Write-Host "-------------------------------------"
}
Write-Host "-------------------------------------"
}

